{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@mantou/gem/lib/utils.js","webpack:///./node_modules/@mantou/gem/lib/store.js","webpack:///./node_modules/@mantou/gem/lib/history.js","webpack:///./node_modules/lit-html/lib/directive.js","webpack:///./node_modules/lit-html/lib/dom.js","webpack:///./node_modules/lit-html/lib/part.js","webpack:///./node_modules/lit-html/lib/template.js","webpack:///./node_modules/lit-html/lib/template-instance.js","webpack:///./node_modules/lit-html/lib/template-result.js","webpack:///./node_modules/lit-html/lib/parts.js","webpack:///./node_modules/lit-html/lib/default-template-processor.js","webpack:///./node_modules/lit-html/lib/template-factory.js","webpack:///./node_modules/lit-html/lib/render.js","webpack:///./node_modules/lit-html/lit-html.js","webpack:///./node_modules/lit-html/directives/repeat.js","webpack:///./node_modules/lit-html/directives/if-defined.js","webpack:///./node_modules/@mantou/gem/lib/element.js","webpack:///./src/index.ts","webpack:///./src/main.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","updaterSet","Set","addMicrotask","func","size","queueMicrotask","forEach","clear","delete","add","StorageType","Storage","[object Object]","this","cache","type","window","getItem","result","JSON","parse","e","removeItem","LOCALSTORAGE","SESSIONSTORAGE","setItem","stringify","set","QueryString","URLSearchParams","param","super","keys","append","query","fromEntries","string","toString","WeakMap","HANDLES_KEY","createStore","originStore","store","updateStore","assign","disconnect","historyState","list","currentIndex","openHandleMap","colseHandleMap","shouldCloseHandleMap","generateState","data","open","close","shouldClose","$key","Error","$open","$close","$shouldClose","state","Date","now","performance","basePath","history_history","v","path","location","pathname","replace","RegExp","hash","title","history","forward","back","options","pushState","dispatchEvent","CustomEvent","newList","slice","concat","length","closeHandle","push","replaceState","splice","__gemHistory","search","storage","sessionStorageKey","getSession","addEventListener","setSession","navigating","event","prevState","newStateIndex","findIndex","newState","openHandle","shouldCloseHandle","directives","directive_directive","f","args","isDirective","has","isCEPolyfill","undefined","customElements","polyfillWrapFlushCallback","reparentNodes","container","start","end","before","nextSibling","insertBefore","removeNodes","removeChild","noChange","nothing","marker","String","Math","random","nodeMarker","markerRegex","boundAttributeSuffix","Template","element","parts","nodesToRemove","stack","walker","document","createTreeWalker","content","lastPartIndex","index","partIndex","strings","values","node","nextNode","nodeType","hasAttributes","attributes","count","endsWith","stringForPart","lastAttributeNameRegex","exec","attributeLookupName","toLowerCase","attributeValue","getAttribute","removeAttribute","statics","split","tagName","currentNode","indexOf","parent","parentNode","lastIndex","insert","createMarker","match","createTextNode","previousSibling","pop","str","suffix","isTemplatePartActive","part","createComment","template_instance_TemplateInstance","template","processor","__parts","setValue","commit","fragment","cloneNode","importNode","nodeIndex","nodeName","handleTextExpression","insertAfterNode","handleAttributeExpressions","adoptNode","upgrade","template_result_TemplateResult","html","isCommentBinding","commentOpen","lastIndexOf","attributeMatch","substr","createElement","innerHTML","getHTML","template_result_SVGTemplateResult","getTemplateElement","svgElement","firstChild","isPrimitive","isIterable","Array","isArray","iterator","AttributeCommitter","dirty","_createPart","parts_AttributePart","text","setAttribute","_getValue","committer","directive","parts_NodePart","__pendingValue","startNode","appendChild","endNode","ref","__insert","__commitText","__commitTemplateResult","Node","__commitNode","__commitIterable","valueAsString","templateFactory","update","instance","_clone","itemParts","itemPart","item","appendIntoPart","insertAfterPart","parts_BooleanAttributePart","PropertyCommitter","single","PropertyPart","eventOptionsSupported","capture","removeEventListener","_e","parts_EventPart","eventName","eventContext","__boundHandleEvent","handleEvent","newListener","oldListener","shouldRemoveListener","once","passive","shouldAddListener","__options","getOptions","defaultTemplateProcessor","prefix","templateCache","templateCaches","stringsArray","keyString","Map","join","render_parts","createAndInsertPart","containerPart","beforePart","beforeNode","newPart","updatePart","insertPartBefore","removePart","generateMap","map","partListCache","keyListCache","repeat","items","keyFnOrTemplate","keyFn","oldParts","oldKeys","newParts","newValues","newKeys","newKeyToIndexMap","oldKeyToIndexMap","oldHead","oldTail","newHead","newTail","oldIndex","oldPart","ifDefined","litHtml","svg","render","appendInto","__litHtml","element_html","element_svg","element_render","element_directive","element_repeat","element_ifDefined","idElementMap","checkHash","scrollIntoView","readyState","renderTaskPool","currentId","pool","requestAnimationFrame","callback","timestamp","task","element_BaseElement","HTMLElement","shadow","setState","willMount","mounted","shouldUpdate","updated","disconnectStores","attributeChanged","propertyChanged","unmounted","_renderRoot","attachShadow","observedAttributes","observedPropertys","observedStores","adoptedStyleSheets","attr","includes","prop","propValue","_isMounted","connect","shadowRoot","payload","id","storeList","_name","_oldValue","_newValue","oldValue","newValue","constructor","GemElement","define","Class","onClick","__awaiter","audio","captureStream","mozCaptureStream","ams","getAudioTracks","ims","canvas","getVideoTracks","console","log","currentTime","play","vms","MediaStream","video","onerror","error","srcObject","mr","MediaRecorder","ondataavailable","onstart","onstop","onStop","pause","stop","querySelector","ctx","getContext","rect","fill","body"],"mappings":"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","file":"bundle.75df956c96840e650656.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"https://mantou132.github.io/audio-to-video/build/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","const updaterSet = new Set();\nexport function addMicrotask(func) {\n    if (!updaterSet.size) {\n        // delayed execution callback after updating store\n        queueMicrotask(() => {\n            updaterSet.forEach(func => func());\n            updaterSet.clear();\n        });\n    }\n    updaterSet.delete(func);\n    updaterSet.add(func);\n}\nexport class Pool {\n    constructor() {\n        this.currentId = 0;\n        this.count = 0;\n        this.pool = new Map();\n    }\n    add(item) {\n        this.pool.set(this.count, item);\n        this.count += 1;\n    }\n    get() {\n        const item = this.pool.get(this.currentId);\n        if (item) {\n            this.pool.delete(this.currentId);\n            this.currentId += 1;\n        }\n        return item;\n    }\n}\nvar StorageType;\n(function (StorageType) {\n    StorageType[\"LOCALSTORAGE\"] = \"localStorage\";\n    StorageType[\"SESSIONSTORAGE\"] = \"sessionStorage\";\n})(StorageType || (StorageType = {}));\nexport class Storage {\n    constructor() {\n        this.cache = {};\n    }\n    get(key, type) {\n        if (!this.cache[type])\n            this.cache[type] = {};\n        if (key in this.cache[type])\n            return this.cache[type][key];\n        let value = window[type].getItem(key);\n        if (!value)\n            return undefined;\n        try {\n            const result = JSON.parse(value);\n            this.cache[type][key] = result;\n            return result;\n        }\n        catch (e) {\n            window[type].removeItem(key);\n        }\n    }\n    getLocal(key) {\n        return this.get(key, StorageType.LOCALSTORAGE);\n    }\n    getSession(key) {\n        return this.get(key, StorageType.SESSIONSTORAGE);\n    }\n    set(key, value, type) {\n        if (!this.cache[type])\n            this.cache[type] = {};\n        this.cache[type][key] = value;\n        return window[type].setItem(key, JSON.stringify(value));\n    }\n    setLocal(key, value) {\n        return this.set(key, value, StorageType.LOCALSTORAGE);\n    }\n    setSession(key, value) {\n        return this.set(key, value, StorageType.SESSIONSTORAGE);\n    }\n}\nexport class QueryString extends URLSearchParams {\n    constructor(param) {\n        if (param instanceof QueryString) {\n            return param;\n        }\n        else if (typeof param === 'string') {\n            super(param);\n        }\n        else if (param) {\n            super();\n            Object.keys(param).forEach(key => {\n                this.append(key, param[key]);\n            });\n        }\n        else {\n            super();\n        }\n    }\n    concat(param) {\n        let query;\n        if (typeof param === 'string') {\n            // @ts-ignore\n            query = Object.fromEntries(new URLSearchParams(param));\n        }\n        else {\n            query = param;\n        }\n        Object.keys(query).forEach(key => {\n            this.append(key, query[key]);\n        });\n    }\n    toString() {\n        const string = super.toString();\n        return string ? `?${string}` : '';\n    }\n    toJSON() {\n        return this.toString();\n    }\n}\n// 写 html 文本\nexport function raw(arr, ...args) {\n    return arr.reduce((prev, current, index) => prev + (args[index - 1] || '') + current);\n}\n// 写 css 文本，在 CSSStyleSheet 中使用\nexport function css(arr, ...args) {\n    return raw(arr, ...args);\n}\nconst rulesWeakMap = new WeakMap();\n// rules 引用的是字符串，所以不能动态更新\nexport function createCSSSheet(rules, mediaQuery = '') {\n    let cssSheet = rulesWeakMap.get(rules);\n    if (!cssSheet) {\n        const sheet = new CSSStyleSheet();\n        sheet.media.mediaText = mediaQuery;\n        let style = '';\n        if (typeof rules === 'string') {\n            style = rules;\n        }\n        else {\n            Object.keys(rules).forEach(key => {\n                sheet[key] = rules[key].type === 'tag' ? key : `${key}-${rules[key].key}`;\n                style += rules[key].str.replace(/&/g, sheet[key]);\n            });\n            rulesWeakMap.set(rules, sheet);\n        }\n        sheet.replaceSync(style);\n        cssSheet = sheet;\n    }\n    return cssSheet;\n}\nfunction randomStr(number = 5, origin = '0123456789abcdefghijklmnopqrstuvwxyz') {\n    const len = origin.length;\n    let str = '';\n    for (let i = 0; i < number; i++) {\n        str += origin[Math.floor(Math.random() * len)];\n    }\n    return str;\n}\n// 只支持一层嵌套\n// https://drafts.csswg.org/css-nesting-1/\nfunction flatStyled(style, type) {\n    const subStyle = [];\n    let str = `& {${style.replace(new RegExp('&.*{(.*)}', 'gs'), function (substr) {\n        subStyle.push(substr);\n        return '';\n    })}}` + subStyle.join('');\n    if (type !== 'tag')\n        str = str.replace(/&/g, type === 'class' ? '.&' : '#&');\n    return { str, key: randomStr(), type };\n}\n// 写 css 文本，在 CSSStyleSheet 中使用，使用 styed-components 高亮\n//\n// createCSSSheet({\n//   red: styled.class`\n//     background: red;\n//     &:hover {\n//       background: blue;\n//     }\n//   `,\n// });\nexport const styled = {\n    class: (arr, ...args) => {\n        const style = raw(arr, ...args);\n        return flatStyled(style, 'class');\n    },\n    id: (arr, ...args) => {\n        const style = raw(arr, ...args);\n        return flatStyled(style, 'id');\n    },\n    tag: (arr, ...args) => {\n        const style = raw(arr, ...args);\n        return flatStyled(style, 'tag');\n    },\n};\n//# sourceMappingURL=utils.js.map","import { addMicrotask } from './utils';\nexport const HANDLES_KEY = Symbol('handles key');\nexport function createStore(originStore) {\n    const store = originStore;\n    store[HANDLES_KEY] = new Set();\n    return store;\n}\nexport function createStoreSet(originStoreSet) {\n    const keys = Object.keys(originStoreSet);\n    keys.forEach(key => {\n        createStore(originStoreSet[key]);\n    });\n    return originStoreSet;\n}\nexport function updateStore(store, value) {\n    Object.assign(store, value);\n    const listeners = store[HANDLES_KEY];\n    listeners.forEach(func => {\n        addMicrotask(func);\n    });\n}\nexport function connect(store, func) {\n    const listeners = store[HANDLES_KEY];\n    listeners.add(func);\n}\nexport function disconnect(store, func) {\n    const listeners = store[HANDLES_KEY];\n    listeners.delete(func);\n}\n//# sourceMappingURL=store.js.map","import { createStore, updateStore } from './store';\nimport { Storage, QueryString } from './utils';\nconst historyState = createStore({\n    list: [{}],\n    currentIndex: 0,\n});\nconst openHandleMap = new WeakMap();\nconst colseHandleMap = new WeakMap();\nconst shouldCloseHandleMap = new WeakMap();\nfunction generateState(data, open, close, shouldClose) {\n    if (data.$key)\n        throw new Error('`$key` is not allowed');\n    if (data.$open)\n        throw new Error('`$open` is not allowed');\n    if (data.$close)\n        throw new Error('`$close` is not allowed');\n    if (data.$shouldClose)\n        throw new Error('`$shouldClose` is not allowed');\n    const state = Object.assign({}, data, { $key: Date.now() + performance.now(), $open: !!open, $close: !!close, $shouldClose: !!shouldClose });\n    openHandleMap.set(state, open);\n    colseHandleMap.set(state, close);\n    shouldCloseHandleMap.set(state, shouldClose);\n    return state;\n}\nlet basePath = '';\nlet history = {\n    historyState,\n    get basePath() {\n        return basePath;\n    },\n    set basePath(v) {\n        const { list, currentIndex } = historyState;\n        // 应用初始化的时候设置\n        const location = list[currentIndex];\n        location.path = window.location.pathname.replace(new RegExp(`^${v}`), '');\n        updateStore(historyState, {});\n        basePath = v;\n    },\n    get location() {\n        const { list, currentIndex } = historyState;\n        const location = list[currentIndex];\n        return {\n            get query() {\n                return new QueryString(location.query);\n            },\n            hash: location.hash,\n            path: location.path,\n            state: location.state,\n            title: location.title,\n        };\n    },\n    forward() {\n        window.history.forward();\n    },\n    back() {\n        window.history.back();\n    },\n    push(options) {\n        const { path, open, close, shouldClose } = options;\n        const query = options.query || '';\n        const hash = options.hash || '';\n        const title = options.title || '';\n        const data = options.data || {};\n        const state = generateState(data, open, close, shouldClose);\n        window.history.pushState(state, title, history.basePath + path + new QueryString(query) + hash);\n        const { list, currentIndex } = historyState;\n        if (hash !== list[currentIndex].hash)\n            window.dispatchEvent(new CustomEvent('hashchange'));\n        const newList = list.slice(0, currentIndex + 1).concat({\n            state,\n            title,\n            path,\n            query,\n            hash,\n        });\n        updateStore(historyState, {\n            list: newList,\n            currentIndex: newList.length - 1,\n        });\n    },\n    // push 一条历史记录\n    // 有 close 处理函数时先执行 closeHandle 在 replace\n    // 比如在 modal 打开时跳转页面\n    // 不完美：只支持在 1 级 modal 中切换页面\n    pushWithoutCloseHandle(options) {\n        const { list, currentIndex } = historyState;\n        const { state } = list[currentIndex];\n        if (state.$close) {\n            const closeHandle = colseHandleMap.get(state);\n            closeHandle();\n            history.replace(options);\n        }\n        else {\n            history.push(options);\n        }\n    },\n    // 修改 url 意外的状态\n    pushState(options) {\n        const { list, currentIndex } = historyState;\n        const { path, query, hash } = list[currentIndex];\n        history.push(Object.assign({ path,\n            query,\n            hash }, options));\n    },\n    replace(options) {\n        const { path, open, close, shouldClose } = options;\n        const query = options.query || '';\n        const hash = options.hash || '';\n        const data = options.data || {};\n        const title = options.title || '';\n        const state = generateState(data, open, close, shouldClose);\n        window.history.replaceState(state, title, history.basePath + path + new QueryString(query) + hash);\n        const { list, currentIndex } = historyState;\n        if (hash !== list[currentIndex].hash)\n            window.dispatchEvent(new CustomEvent('hashchange'));\n        list.splice(currentIndex, 1, {\n            state,\n            title,\n            path,\n            query,\n            hash,\n        });\n        updateStore(historyState, {\n            list,\n        });\n    },\n    // 修改 url 意外的状态\n    replaceState(options) {\n        const { list, currentIndex } = historyState;\n        const { path, query, hash } = list[currentIndex];\n        history.replace(Object.assign({ path,\n            query,\n            hash }, options));\n    },\n};\nconst hasOtherHistory = !!window.__gemHistory;\nif (hasOtherHistory) {\n    history = window.__gemHistory;\n    const basePath = history.basePath;\n    Object.defineProperty(history, 'basePath', {\n        get() {\n            return basePath;\n        },\n        set() {\n            throw new Error('已经有其他环境使用 gem , 会共享 history 对象，禁止再修改 history 对象');\n        },\n    });\n}\nelse {\n    window.__gemHistory = history;\n    if (!window.history.state) {\n        // 初始化 historyItem[]\n        const { pathname, search, hash } = window.location;\n        history.replace({ path: pathname, query: search, hash });\n    }\n    else if (window.history.state.$close) {\n        // 有 handle 返回键的页面刷新\n        history.back();\n    }\n    const storage = new Storage();\n    const sessionStorageKey = 'gem@historyStateList';\n    updateStore(historyState, storage.getSession(sessionStorageKey));\n    window.addEventListener('unload', () => {\n        storage.setSession(sessionStorageKey, historyState);\n    });\n    /**\n     * 表示 popstate handler 中正在进行导航\n     */\n    let navigating = false;\n    window.addEventListener('popstate', event => {\n        if (!event.state || !event.state.$key) {\n            // 比如作为其他 app 的宿主 app\n            return;\n        }\n        if (navigating) {\n            navigating = false;\n            return;\n        }\n        // forward or back\n        // replace 不会触发\n        // url 变化前 historyItem\n        const { list, currentIndex } = historyState;\n        const { state: prevState } = list[currentIndex];\n        const newStateIndex = list.findIndex(({ state }) => state.$key === event.state.$key);\n        // gem app 嵌套 gem app，且不是同一个 history 对象时\n        if (newStateIndex === -1)\n            return;\n        const { state: newState } = list[newStateIndex];\n        if (newStateIndex > currentIndex && newState.$open) {\n            // 返回键关闭的 modal 能前进键重新打开\n            // 刷新后不能工作：刷新后 historyItem 中只有 url\n            const openHandle = openHandleMap.get(newState);\n            if (openHandle)\n                openHandle();\n        }\n        else if (prevState.$close) {\n            const closeHandle = colseHandleMap.get(prevState);\n            const shouldCloseHandle = shouldCloseHandleMap.get(prevState);\n            const notAllowClose = shouldCloseHandle && !shouldCloseHandle();\n            if (notAllowClose) {\n                navigating = true;\n                history.forward(); // 将重新触发 popstate\n                return; // 历史记录栈位置没有变化，不需要后面的 updateStore\n            }\n            else {\n                // handle 返回键\n                if (closeHandle) {\n                    closeHandle();\n                }\n                else {\n                    // 有 modal 的页面刷新会执行 back 触发 popstate\n                    // 如果是耳机 modal 页面刷新\n                    // 则还需要进行一次 back\n                    // 不完美：三级 modal 页面刷新不支持返回到初始页面\n                    navigating = true;\n                    history.back();\n                }\n            }\n        }\n        updateStore(historyState, {\n            currentIndex: newStateIndex,\n        });\n    });\n}\nexport { history };\n//# sourceMappingURL=history.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nconst directives = new WeakMap();\n/**\n * Brands a function as a directive factory function so that lit-html will call\n * the function during template rendering, rather than passing as a value.\n *\n * A _directive_ is a function that takes a Part as an argument. It has the\n * signature: `(part: Part) => void`.\n *\n * A directive _factory_ is a function that takes arguments for data and\n * configuration and returns a directive. Users of directive usually refer to\n * the directive factory as the directive. For example, \"The repeat directive\".\n *\n * Usually a template author will invoke a directive factory in their template\n * with relevant arguments, which will then return a directive function.\n *\n * Here's an example of using the `repeat()` directive factory that takes an\n * array and a function to render an item:\n *\n * ```js\n * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`\n * ```\n *\n * When `repeat` is invoked, it returns a directive function that closes over\n * `items` and the template function. When the outer template is rendered, the\n * return directive function is called with the Part for the expression.\n * `repeat` then performs it's custom logic to render multiple items.\n *\n * @param f The directive factory function. Must be a function that returns a\n * function of the signature `(part: Part) => void`. The returned function will\n * be called with the part object.\n *\n * @example\n *\n * import {directive, html} from 'lit-html';\n *\n * const immutable = directive((v) => (part) => {\n *   if (part.value !== v) {\n *     part.setValue(v)\n *   }\n * });\n */\nexport const directive = (f) => ((...args) => {\n    const d = f(...args);\n    directives.set(d, true);\n    return d;\n});\nexport const isDirective = (o) => {\n    return typeof o === 'function' && directives.has(o);\n};\n//# sourceMappingURL=directive.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * True if the custom elements polyfill is in use.\n */\nexport const isCEPolyfill = window.customElements !== undefined &&\n    window.customElements.polyfillWrapFlushCallback !==\n        undefined;\n/**\n * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),\n * into another container (could be the same container), before `before`. If\n * `before` is null, it appends the nodes to the container.\n */\nexport const reparentNodes = (container, start, end = null, before = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.insertBefore(start, before);\n        start = n;\n    }\n};\n/**\n * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from\n * `container`.\n */\nexport const removeNodes = (container, start, end = null) => {\n    while (start !== end) {\n        const n = start.nextSibling;\n        container.removeChild(start);\n        start = n;\n    }\n};\n//# sourceMappingURL=dom.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * A sentinel value that signals that a value was handled by a directive and\n * should not be written to the DOM.\n */\nexport const noChange = {};\n/**\n * A sentinel value that signals a NodePart to fully clear its content.\n */\nexport const nothing = {};\n//# sourceMappingURL=part.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * An expression marker with embedded unique key to avoid collision with\n * possible text in templates.\n */\nexport const marker = `{{lit-${String(Math.random()).slice(2)}}}`;\n/**\n * An expression marker used text-positions, multi-binding attributes, and\n * attributes with markup-like text values.\n */\nexport const nodeMarker = `<!--${marker}-->`;\nexport const markerRegex = new RegExp(`${marker}|${nodeMarker}`);\n/**\n * Suffix appended to all bound attribute names.\n */\nexport const boundAttributeSuffix = '$lit$';\n/**\n * An updateable Template that tracks the location of dynamic parts.\n */\nexport class Template {\n    constructor(result, element) {\n        this.parts = [];\n        this.element = element;\n        const nodesToRemove = [];\n        const stack = [];\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(element.content, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        // Keeps track of the last index associated with a part. We try to delete\n        // unnecessary nodes, but we never want to associate two different parts\n        // to the same index. They must have a constant node between.\n        let lastPartIndex = 0;\n        let index = -1;\n        let partIndex = 0;\n        const { strings, values: { length } } = result;\n        while (partIndex < length) {\n            const node = walker.nextNode();\n            if (node === null) {\n                // We've exhausted the content inside a nested template element.\n                // Because we still have parts (the outer for-loop), we know:\n                // - There is a template in the stack\n                // - The walker will find a nextNode outside the template\n                walker.currentNode = stack.pop();\n                continue;\n            }\n            index++;\n            if (node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n                if (node.hasAttributes()) {\n                    const attributes = node.attributes;\n                    const { length } = attributes;\n                    // Per\n                    // https://developer.mozilla.org/en-US/docs/Web/API/NamedNodeMap,\n                    // attributes are not guaranteed to be returned in document order.\n                    // In particular, Edge/IE can return them out of order, so we cannot\n                    // assume a correspondence between part index and attribute index.\n                    let count = 0;\n                    for (let i = 0; i < length; i++) {\n                        if (endsWith(attributes[i].name, boundAttributeSuffix)) {\n                            count++;\n                        }\n                    }\n                    while (count-- > 0) {\n                        // Get the template literal section leading up to the first\n                        // expression in this attribute\n                        const stringForPart = strings[partIndex];\n                        // Find the attribute name\n                        const name = lastAttributeNameRegex.exec(stringForPart)[2];\n                        // Find the corresponding attribute\n                        // All bound attributes have had a suffix added in\n                        // TemplateResult#getHTML to opt out of special attribute\n                        // handling. To look up the attribute value we also need to add\n                        // the suffix.\n                        const attributeLookupName = name.toLowerCase() + boundAttributeSuffix;\n                        const attributeValue = node.getAttribute(attributeLookupName);\n                        node.removeAttribute(attributeLookupName);\n                        const statics = attributeValue.split(markerRegex);\n                        this.parts.push({ type: 'attribute', index, name, strings: statics });\n                        partIndex += statics.length - 1;\n                    }\n                }\n                if (node.tagName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n            }\n            else if (node.nodeType === 3 /* Node.TEXT_NODE */) {\n                const data = node.data;\n                if (data.indexOf(marker) >= 0) {\n                    const parent = node.parentNode;\n                    const strings = data.split(markerRegex);\n                    const lastIndex = strings.length - 1;\n                    // Generate a new text node for each literal section\n                    // These nodes are also used as the markers for node parts\n                    for (let i = 0; i < lastIndex; i++) {\n                        let insert;\n                        let s = strings[i];\n                        if (s === '') {\n                            insert = createMarker();\n                        }\n                        else {\n                            const match = lastAttributeNameRegex.exec(s);\n                            if (match !== null && endsWith(match[2], boundAttributeSuffix)) {\n                                s = s.slice(0, match.index) + match[1] +\n                                    match[2].slice(0, -boundAttributeSuffix.length) + match[3];\n                            }\n                            insert = document.createTextNode(s);\n                        }\n                        parent.insertBefore(insert, node);\n                        this.parts.push({ type: 'node', index: ++index });\n                    }\n                    // If there's no text, we must insert a comment to mark our place.\n                    // Else, we can trust it will stick around after cloning.\n                    if (strings[lastIndex] === '') {\n                        parent.insertBefore(createMarker(), node);\n                        nodesToRemove.push(node);\n                    }\n                    else {\n                        node.data = strings[lastIndex];\n                    }\n                    // We have a part for each match found\n                    partIndex += lastIndex;\n                }\n            }\n            else if (node.nodeType === 8 /* Node.COMMENT_NODE */) {\n                if (node.data === marker) {\n                    const parent = node.parentNode;\n                    // Add a new marker node to be the startNode of the Part if any of\n                    // the following are true:\n                    //  * We don't have a previousSibling\n                    //  * The previousSibling is already the start of a previous part\n                    if (node.previousSibling === null || index === lastPartIndex) {\n                        index++;\n                        parent.insertBefore(createMarker(), node);\n                    }\n                    lastPartIndex = index;\n                    this.parts.push({ type: 'node', index });\n                    // If we don't have a nextSibling, keep this node so we have an end.\n                    // Else, we can remove it to save future costs.\n                    if (node.nextSibling === null) {\n                        node.data = '';\n                    }\n                    else {\n                        nodesToRemove.push(node);\n                        index--;\n                    }\n                    partIndex++;\n                }\n                else {\n                    let i = -1;\n                    while ((i = node.data.indexOf(marker, i + 1)) !== -1) {\n                        // Comment node has a binding marker inside, make an inactive part\n                        // The binding won't work, but subsequent bindings will\n                        // TODO (justinfagnani): consider whether it's even worth it to\n                        // make bindings in comments work\n                        this.parts.push({ type: 'node', index: -1 });\n                        partIndex++;\n                    }\n                }\n            }\n        }\n        // Remove text binding nodes after the walk to not disturb the TreeWalker\n        for (const n of nodesToRemove) {\n            n.parentNode.removeChild(n);\n        }\n    }\n}\nconst endsWith = (str, suffix) => {\n    const index = str.length - suffix.length;\n    return index >= 0 && str.slice(index) === suffix;\n};\nexport const isTemplatePartActive = (part) => part.index !== -1;\n// Allows `document.createComment('')` to be renamed for a\n// small manual size-savings.\nexport const createMarker = () => document.createComment('');\n/**\n * This regex extracts the attribute name preceding an attribute-position\n * expression. It does this by matching the syntax allowed for attributes\n * against the string literal directly preceding the expression, assuming that\n * the expression is in an attribute-value position.\n *\n * See attributes in the HTML spec:\n * https://www.w3.org/TR/html5/syntax.html#elements-attributes\n *\n * \" \\x09\\x0a\\x0c\\x0d\" are HTML space characters:\n * https://www.w3.org/TR/html5/infrastructure.html#space-characters\n *\n * \"\\0-\\x1F\\x7F-\\x9F\" are Unicode control characters, which includes every\n * space character except \" \".\n *\n * So an attribute is:\n *  * The name: any character except a control character, space character, ('),\n *    (\"), \">\", \"=\", or \"/\"\n *  * Followed by zero or more space characters\n *  * Followed by \"=\"\n *  * Followed by zero or more space characters\n *  * Followed by:\n *    * Any character except space, ('), (\"), \"<\", \">\", \"=\", (`), or\n *    * (\") then any non-(\"), or\n *    * (') then any non-(')\n */\nexport const lastAttributeNameRegex = /([ \\x09\\x0a\\x0c\\x0d])([^\\0-\\x1F\\x7F-\\x9F \"'>=/]+)([ \\x09\\x0a\\x0c\\x0d]*=[ \\x09\\x0a\\x0c\\x0d]*(?:[^ \\x09\\x0a\\x0c\\x0d\"'`<>=]*|\"[^\"]*|'[^']*))$/;\n//# sourceMappingURL=template.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isCEPolyfill } from './dom.js';\nimport { isTemplatePartActive } from './template.js';\n/**\n * An instance of a `Template` that can be attached to the DOM and updated\n * with new values.\n */\nexport class TemplateInstance {\n    constructor(template, processor, options) {\n        this.__parts = [];\n        this.template = template;\n        this.processor = processor;\n        this.options = options;\n    }\n    update(values) {\n        let i = 0;\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.setValue(values[i]);\n            }\n            i++;\n        }\n        for (const part of this.__parts) {\n            if (part !== undefined) {\n                part.commit();\n            }\n        }\n    }\n    _clone() {\n        // There are a number of steps in the lifecycle of a template instance's\n        // DOM fragment:\n        //  1. Clone - create the instance fragment\n        //  2. Adopt - adopt into the main document\n        //  3. Process - find part markers and create parts\n        //  4. Upgrade - upgrade custom elements\n        //  5. Update - set node, attribute, property, etc., values\n        //  6. Connect - connect to the document. Optional and outside of this\n        //     method.\n        //\n        // We have a few constraints on the ordering of these steps:\n        //  * We need to upgrade before updating, so that property values will pass\n        //    through any property setters.\n        //  * We would like to process before upgrading so that we're sure that the\n        //    cloned fragment is inert and not disturbed by self-modifying DOM.\n        //  * We want custom elements to upgrade even in disconnected fragments.\n        //\n        // Given these constraints, with full custom elements support we would\n        // prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect\n        //\n        // But Safari dooes not implement CustomElementRegistry#upgrade, so we\n        // can not implement that order and still have upgrade-before-update and\n        // upgrade disconnected fragments. So we instead sacrifice the\n        // process-before-upgrade constraint, since in Custom Elements v1 elements\n        // must not modify their light DOM in the constructor. We still have issues\n        // when co-existing with CEv0 elements like Polymer 1, and with polyfills\n        // that don't strictly adhere to the no-modification rule because shadow\n        // DOM, which may be created in the constructor, is emulated by being placed\n        // in the light DOM.\n        //\n        // The resulting order is on native is: Clone, Adopt, Upgrade, Process,\n        // Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade\n        // in one step.\n        //\n        // The Custom Elements v1 polyfill supports upgrade(), so the order when\n        // polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,\n        // Connect.\n        const fragment = isCEPolyfill ?\n            this.template.element.content.cloneNode(true) :\n            document.importNode(this.template.element.content, true);\n        const stack = [];\n        const parts = this.template.parts;\n        // Edge needs all 4 parameters present; IE11 needs 3rd parameter to be null\n        const walker = document.createTreeWalker(fragment, 133 /* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */, null, false);\n        let partIndex = 0;\n        let nodeIndex = 0;\n        let part;\n        let node = walker.nextNode();\n        // Loop through all the nodes and parts of a template\n        while (partIndex < parts.length) {\n            part = parts[partIndex];\n            if (!isTemplatePartActive(part)) {\n                this.__parts.push(undefined);\n                partIndex++;\n                continue;\n            }\n            // Progress the tree walker until we find our next part's node.\n            // Note that multiple parts may share the same node (attribute parts\n            // on a single element), so this loop may not run at all.\n            while (nodeIndex < part.index) {\n                nodeIndex++;\n                if (node.nodeName === 'TEMPLATE') {\n                    stack.push(node);\n                    walker.currentNode = node.content;\n                }\n                if ((node = walker.nextNode()) === null) {\n                    // We've exhausted the content inside a nested template element.\n                    // Because we still have parts (the outer for-loop), we know:\n                    // - There is a template in the stack\n                    // - The walker will find a nextNode outside the template\n                    walker.currentNode = stack.pop();\n                    node = walker.nextNode();\n                }\n            }\n            // We've arrived at our part's node.\n            if (part.type === 'node') {\n                const part = this.processor.handleTextExpression(this.options);\n                part.insertAfterNode(node.previousSibling);\n                this.__parts.push(part);\n            }\n            else {\n                this.__parts.push(...this.processor.handleAttributeExpressions(node, part.name, part.strings, this.options));\n            }\n            partIndex++;\n        }\n        if (isCEPolyfill) {\n            document.adoptNode(fragment);\n            customElements.upgrade(fragment);\n        }\n        return fragment;\n    }\n}\n//# sourceMappingURL=template-instance.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { reparentNodes } from './dom.js';\nimport { boundAttributeSuffix, lastAttributeNameRegex, marker, nodeMarker } from './template.js';\n/**\n * The return type of `html`, which holds a Template and the values from\n * interpolated expressions.\n */\nexport class TemplateResult {\n    constructor(strings, values, type, processor) {\n        this.strings = strings;\n        this.values = values;\n        this.type = type;\n        this.processor = processor;\n    }\n    /**\n     * Returns a string of HTML used to create a `<template>` element.\n     */\n    getHTML() {\n        const l = this.strings.length - 1;\n        let html = '';\n        let isCommentBinding = false;\n        for (let i = 0; i < l; i++) {\n            const s = this.strings[i];\n            // For each binding we want to determine the kind of marker to insert\n            // into the template source before it's parsed by the browser's HTML\n            // parser. The marker type is based on whether the expression is in an\n            // attribute, text, or comment poisition.\n            //   * For node-position bindings we insert a comment with the marker\n            //     sentinel as its text content, like <!--{{lit-guid}}-->.\n            //   * For attribute bindings we insert just the marker sentinel for the\n            //     first binding, so that we support unquoted attribute bindings.\n            //     Subsequent bindings can use a comment marker because multi-binding\n            //     attributes must be quoted.\n            //   * For comment bindings we insert just the marker sentinel so we don't\n            //     close the comment.\n            //\n            // The following code scans the template source, but is *not* an HTML\n            // parser. We don't need to track the tree structure of the HTML, only\n            // whether a binding is inside a comment, and if not, if it appears to be\n            // the first binding in an attribute.\n            const commentOpen = s.lastIndexOf('<!--');\n            // We're in comment position if we have a comment open with no following\n            // comment close. Because <-- can appear in an attribute value there can\n            // be false positives.\n            isCommentBinding = (commentOpen > -1 || isCommentBinding) &&\n                s.indexOf('-->', commentOpen + 1) === -1;\n            // Check to see if we have an attribute-like sequence preceeding the\n            // expression. This can match \"name=value\" like structures in text,\n            // comments, and attribute values, so there can be false-positives.\n            const attributeMatch = lastAttributeNameRegex.exec(s);\n            if (attributeMatch === null) {\n                // We're only in this branch if we don't have a attribute-like\n                // preceeding sequence. For comments, this guards against unusual\n                // attribute values like <div foo=\"<!--${'bar'}\">. Cases like\n                // <!-- foo=${'bar'}--> are handled correctly in the attribute branch\n                // below.\n                html += s + (isCommentBinding ? marker : nodeMarker);\n            }\n            else {\n                // For attributes we use just a marker sentinel, and also append a\n                // $lit$ suffix to the name to opt-out of attribute-specific parsing\n                // that IE and Edge do for style and certain SVG attributes.\n                html += s.substr(0, attributeMatch.index) + attributeMatch[1] +\n                    attributeMatch[2] + boundAttributeSuffix + attributeMatch[3] +\n                    marker;\n            }\n        }\n        html += this.strings[l];\n        return html;\n    }\n    getTemplateElement() {\n        const template = document.createElement('template');\n        template.innerHTML = this.getHTML();\n        return template;\n    }\n}\n/**\n * A TemplateResult for SVG fragments.\n *\n * This class wraps HTML in an `<svg>` tag in order to parse its contents in the\n * SVG namespace, then modifies the template to remove the `<svg>` tag so that\n * clones only container the original fragment.\n */\nexport class SVGTemplateResult extends TemplateResult {\n    getHTML() {\n        return `<svg>${super.getHTML()}</svg>`;\n    }\n    getTemplateElement() {\n        const template = super.getTemplateElement();\n        const content = template.content;\n        const svgElement = content.firstChild;\n        content.removeChild(svgElement);\n        reparentNodes(content, svgElement.firstChild);\n        return template;\n    }\n}\n//# sourceMappingURL=template-result.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { isDirective } from './directive.js';\nimport { removeNodes } from './dom.js';\nimport { noChange, nothing } from './part.js';\nimport { TemplateInstance } from './template-instance.js';\nimport { TemplateResult } from './template-result.js';\nimport { createMarker } from './template.js';\nexport const isPrimitive = (value) => {\n    return (value === null ||\n        !(typeof value === 'object' || typeof value === 'function'));\n};\nexport const isIterable = (value) => {\n    return Array.isArray(value) ||\n        // tslint:disable-next-line:no-any\n        !!(value && value[Symbol.iterator]);\n};\n/**\n * Writes attribute values to the DOM for a group of AttributeParts bound to a\n * single attibute. The value is only set once even if there are multiple parts\n * for an attribute.\n */\nexport class AttributeCommitter {\n    constructor(element, name, strings) {\n        this.dirty = true;\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n        this.parts = [];\n        for (let i = 0; i < strings.length - 1; i++) {\n            this.parts[i] = this._createPart();\n        }\n    }\n    /**\n     * Creates a single part. Override this to create a differnt type of part.\n     */\n    _createPart() {\n        return new AttributePart(this);\n    }\n    _getValue() {\n        const strings = this.strings;\n        const l = strings.length - 1;\n        let text = '';\n        for (let i = 0; i < l; i++) {\n            text += strings[i];\n            const part = this.parts[i];\n            if (part !== undefined) {\n                const v = part.value;\n                if (isPrimitive(v) || !isIterable(v)) {\n                    text += typeof v === 'string' ? v : String(v);\n                }\n                else {\n                    for (const t of v) {\n                        text += typeof t === 'string' ? t : String(t);\n                    }\n                }\n            }\n        }\n        text += strings[l];\n        return text;\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            this.element.setAttribute(this.name, this._getValue());\n        }\n    }\n}\n/**\n * A Part that controls all or part of an attribute value.\n */\nexport class AttributePart {\n    constructor(committer) {\n        this.value = undefined;\n        this.committer = committer;\n    }\n    setValue(value) {\n        if (value !== noChange && (!isPrimitive(value) || value !== this.value)) {\n            this.value = value;\n            // If the value is a not a directive, dirty the committer so that it'll\n            // call setAttribute. If the value is a directive, it'll dirty the\n            // committer if it calls setValue().\n            if (!isDirective(value)) {\n                this.committer.dirty = true;\n            }\n        }\n    }\n    commit() {\n        while (isDirective(this.value)) {\n            const directive = this.value;\n            this.value = noChange;\n            directive(this);\n        }\n        if (this.value === noChange) {\n            return;\n        }\n        this.committer.commit();\n    }\n}\n/**\n * A Part that controls a location within a Node tree. Like a Range, NodePart\n * has start and end locations and can set and update the Nodes between those\n * locations.\n *\n * NodeParts support several value types: primitives, Nodes, TemplateResults,\n * as well as arrays and iterables of those types.\n */\nexport class NodePart {\n    constructor(options) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.options = options;\n    }\n    /**\n     * Appends this part into a container.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendInto(container) {\n        this.startNode = container.appendChild(createMarker());\n        this.endNode = container.appendChild(createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` node (between `ref` and `ref`'s next\n     * sibling). Both `ref` and its next sibling must be static, unchanging nodes\n     * such as those that appear in a literal section of a template.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterNode(ref) {\n        this.startNode = ref;\n        this.endNode = ref.nextSibling;\n    }\n    /**\n     * Appends this part into a parent part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    appendIntoPart(part) {\n        part.__insert(this.startNode = createMarker());\n        part.__insert(this.endNode = createMarker());\n    }\n    /**\n     * Inserts this part after the `ref` part.\n     *\n     * This part must be empty, as its contents are not automatically moved.\n     */\n    insertAfterPart(ref) {\n        ref.__insert(this.startNode = createMarker());\n        this.endNode = ref.endNode;\n        ref.endNode = this.startNode;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        const value = this.__pendingValue;\n        if (value === noChange) {\n            return;\n        }\n        if (isPrimitive(value)) {\n            if (value !== this.value) {\n                this.__commitText(value);\n            }\n        }\n        else if (value instanceof TemplateResult) {\n            this.__commitTemplateResult(value);\n        }\n        else if (value instanceof Node) {\n            this.__commitNode(value);\n        }\n        else if (isIterable(value)) {\n            this.__commitIterable(value);\n        }\n        else if (value === nothing) {\n            this.value = nothing;\n            this.clear();\n        }\n        else {\n            // Fallback, will render the string representation\n            this.__commitText(value);\n        }\n    }\n    __insert(node) {\n        this.endNode.parentNode.insertBefore(node, this.endNode);\n    }\n    __commitNode(value) {\n        if (this.value === value) {\n            return;\n        }\n        this.clear();\n        this.__insert(value);\n        this.value = value;\n    }\n    __commitText(value) {\n        const node = this.startNode.nextSibling;\n        value = value == null ? '' : value;\n        // If `value` isn't already a string, we explicitly convert it here in case\n        // it can't be implicitly converted - i.e. it's a symbol.\n        const valueAsString = typeof value === 'string' ? value : String(value);\n        if (node === this.endNode.previousSibling &&\n            node.nodeType === 3 /* Node.TEXT_NODE */) {\n            // If we only have a single text node between the markers, we can just\n            // set its value, rather than replacing it.\n            // TODO(justinfagnani): Can we just check if this.value is primitive?\n            node.data = valueAsString;\n        }\n        else {\n            this.__commitNode(document.createTextNode(valueAsString));\n        }\n        this.value = value;\n    }\n    __commitTemplateResult(value) {\n        const template = this.options.templateFactory(value);\n        if (this.value instanceof TemplateInstance &&\n            this.value.template === template) {\n            this.value.update(value.values);\n        }\n        else {\n            // Make sure we propagate the template processor from the TemplateResult\n            // so that we use its syntax extension, etc. The template factory comes\n            // from the render function options so that it can control template\n            // caching and preprocessing.\n            const instance = new TemplateInstance(template, value.processor, this.options);\n            const fragment = instance._clone();\n            instance.update(value.values);\n            this.__commitNode(fragment);\n            this.value = instance;\n        }\n    }\n    __commitIterable(value) {\n        // For an Iterable, we create a new InstancePart per item, then set its\n        // value to the item. This is a little bit of overhead for every item in\n        // an Iterable, but it lets us recurse easily and efficiently update Arrays\n        // of TemplateResults that will be commonly returned from expressions like:\n        // array.map((i) => html`${i}`), by reusing existing TemplateInstances.\n        // If _value is an array, then the previous render was of an\n        // iterable and _value will contain the NodeParts from the previous\n        // render. If _value is not an array, clear this part and make a new\n        // array for NodeParts.\n        if (!Array.isArray(this.value)) {\n            this.value = [];\n            this.clear();\n        }\n        // Lets us keep track of how many items we stamped so we can clear leftover\n        // items from a previous render\n        const itemParts = this.value;\n        let partIndex = 0;\n        let itemPart;\n        for (const item of value) {\n            // Try to reuse an existing part\n            itemPart = itemParts[partIndex];\n            // If no existing part, create a new one\n            if (itemPart === undefined) {\n                itemPart = new NodePart(this.options);\n                itemParts.push(itemPart);\n                if (partIndex === 0) {\n                    itemPart.appendIntoPart(this);\n                }\n                else {\n                    itemPart.insertAfterPart(itemParts[partIndex - 1]);\n                }\n            }\n            itemPart.setValue(item);\n            itemPart.commit();\n            partIndex++;\n        }\n        if (partIndex < itemParts.length) {\n            // Truncate the parts array so _value reflects the current state\n            itemParts.length = partIndex;\n            this.clear(itemPart && itemPart.endNode);\n        }\n    }\n    clear(startNode = this.startNode) {\n        removeNodes(this.startNode.parentNode, startNode.nextSibling, this.endNode);\n    }\n}\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart {\n    constructor(element, name, strings) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        if (strings.length !== 2 || strings[0] !== '' || strings[1] !== '') {\n            throw new Error('Boolean attributes can only contain a single expression');\n        }\n        this.element = element;\n        this.name = name;\n        this.strings = strings;\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const value = !!this.__pendingValue;\n        if (this.value !== value) {\n            if (value) {\n                this.element.setAttribute(this.name, '');\n            }\n            else {\n                this.element.removeAttribute(this.name);\n            }\n            this.value = value;\n        }\n        this.__pendingValue = noChange;\n    }\n}\n/**\n * Sets attribute values for PropertyParts, so that the value is only set once\n * even if there are multiple parts for a property.\n *\n * If an expression controls the whole property value, then the value is simply\n * assigned to the property under control. If there are string literals or\n * multiple expressions, then the strings are expressions are interpolated into\n * a string first.\n */\nexport class PropertyCommitter extends AttributeCommitter {\n    constructor(element, name, strings) {\n        super(element, name, strings);\n        this.single =\n            (strings.length === 2 && strings[0] === '' && strings[1] === '');\n    }\n    _createPart() {\n        return new PropertyPart(this);\n    }\n    _getValue() {\n        if (this.single) {\n            return this.parts[0].value;\n        }\n        return super._getValue();\n    }\n    commit() {\n        if (this.dirty) {\n            this.dirty = false;\n            // tslint:disable-next-line:no-any\n            this.element[this.name] = this._getValue();\n        }\n    }\n}\nexport class PropertyPart extends AttributePart {\n}\n// Detect event listener options support. If the `capture` property is read\n// from the options object, then options are supported. If not, then the thrid\n// argument to add/removeEventListener is interpreted as the boolean capture\n// value so we should only pass the `capture` property.\nlet eventOptionsSupported = false;\ntry {\n    const options = {\n        get capture() {\n            eventOptionsSupported = true;\n            return false;\n        }\n    };\n    // tslint:disable-next-line:no-any\n    window.addEventListener('test', options, options);\n    // tslint:disable-next-line:no-any\n    window.removeEventListener('test', options, options);\n}\ncatch (_e) {\n}\nexport class EventPart {\n    constructor(element, eventName, eventContext) {\n        this.value = undefined;\n        this.__pendingValue = undefined;\n        this.element = element;\n        this.eventName = eventName;\n        this.eventContext = eventContext;\n        this.__boundHandleEvent = (e) => this.handleEvent(e);\n    }\n    setValue(value) {\n        this.__pendingValue = value;\n    }\n    commit() {\n        while (isDirective(this.__pendingValue)) {\n            const directive = this.__pendingValue;\n            this.__pendingValue = noChange;\n            directive(this);\n        }\n        if (this.__pendingValue === noChange) {\n            return;\n        }\n        const newListener = this.__pendingValue;\n        const oldListener = this.value;\n        const shouldRemoveListener = newListener == null ||\n            oldListener != null &&\n                (newListener.capture !== oldListener.capture ||\n                    newListener.once !== oldListener.once ||\n                    newListener.passive !== oldListener.passive);\n        const shouldAddListener = newListener != null && (oldListener == null || shouldRemoveListener);\n        if (shouldRemoveListener) {\n            this.element.removeEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        if (shouldAddListener) {\n            this.__options = getOptions(newListener);\n            this.element.addEventListener(this.eventName, this.__boundHandleEvent, this.__options);\n        }\n        this.value = newListener;\n        this.__pendingValue = noChange;\n    }\n    handleEvent(event) {\n        if (typeof this.value === 'function') {\n            this.value.call(this.eventContext || this.element, event);\n        }\n        else {\n            this.value.handleEvent(event);\n        }\n    }\n}\n// We copy options because of the inconsistent behavior of browsers when reading\n// the third argument of add/removeEventListener. IE11 doesn't support options\n// at all. Chrome 41 only reads `capture` if the argument is an object.\nconst getOptions = (o) => o &&\n    (eventOptionsSupported ?\n        { capture: o.capture, passive: o.passive, once: o.once } :\n        o.capture);\n//# sourceMappingURL=parts.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributeCommitter, BooleanAttributePart, EventPart, NodePart, PropertyCommitter } from './parts.js';\n/**\n * Creates Parts when a template is instantiated.\n */\nexport class DefaultTemplateProcessor {\n    /**\n     * Create parts for an attribute-position binding, given the event, attribute\n     * name, and string literals.\n     *\n     * @param element The element containing the binding\n     * @param name  The attribute name\n     * @param strings The string literals. There are always at least two strings,\n     *   event for fully-controlled bindings with a single expression.\n     */\n    handleAttributeExpressions(element, name, strings, options) {\n        const prefix = name[0];\n        if (prefix === '.') {\n            const committer = new PropertyCommitter(element, name.slice(1), strings);\n            return committer.parts;\n        }\n        if (prefix === '@') {\n            return [new EventPart(element, name.slice(1), options.eventContext)];\n        }\n        if (prefix === '?') {\n            return [new BooleanAttributePart(element, name.slice(1), strings)];\n        }\n        const committer = new AttributeCommitter(element, name, strings);\n        return committer.parts;\n    }\n    /**\n     * Create parts for a text-position binding.\n     * @param templateFactory\n     */\n    handleTextExpression(options) {\n        return new NodePart(options);\n    }\n}\nexport const defaultTemplateProcessor = new DefaultTemplateProcessor();\n//# sourceMappingURL=default-template-processor.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { marker, Template } from './template.js';\n/**\n * The default TemplateFactory which caches Templates keyed on\n * result.type and result.strings.\n */\nexport function templateFactory(result) {\n    let templateCache = templateCaches.get(result.type);\n    if (templateCache === undefined) {\n        templateCache = {\n            stringsArray: new WeakMap(),\n            keyString: new Map()\n        };\n        templateCaches.set(result.type, templateCache);\n    }\n    let template = templateCache.stringsArray.get(result.strings);\n    if (template !== undefined) {\n        return template;\n    }\n    // If the TemplateStringsArray is new, generate a key from the strings\n    // This key is shared between all templates with identical content\n    const key = result.strings.join(marker);\n    // Check if we already have a Template for this key\n    template = templateCache.keyString.get(key);\n    if (template === undefined) {\n        // If we have not seen this key before, create a new Template\n        template = new Template(result, result.getTemplateElement());\n        // Cache the Template for this key\n        templateCache.keyString.set(key, template);\n    }\n    // Cache all future queries for this TemplateStringsArray\n    templateCache.stringsArray.set(result.strings, template);\n    return template;\n}\nexport const templateCaches = new Map();\n//# sourceMappingURL=template-factory.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n * @module lit-html\n */\nimport { removeNodes } from './dom.js';\nimport { NodePart } from './parts.js';\nimport { templateFactory } from './template-factory.js';\nexport const parts = new WeakMap();\n/**\n * Renders a template result or other value to a container.\n *\n * To update a container with new values, reevaluate the template literal and\n * call `render` with the new result.\n *\n * @param result Any value renderable by NodePart - typically a TemplateResult\n *     created by evaluating a template tag like `html` or `svg`.\n * @param container A DOM parent to render to. The entire contents are either\n *     replaced, or efficiently updated if the same result type was previous\n *     rendered there.\n * @param options RenderOptions for the entire render tree rendered to this\n *     container. Render options must *not* change between renders to the same\n *     container, as those changes will not effect previously rendered DOM.\n */\nexport const render = (result, container, options) => {\n    let part = parts.get(container);\n    if (part === undefined) {\n        removeNodes(container, container.firstChild);\n        parts.set(container, part = new NodePart(Object.assign({ templateFactory }, options)));\n        part.appendInto(container);\n    }\n    part.setValue(result);\n    part.commit();\n};\n//# sourceMappingURL=render.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @module lit-html\n * @preferred\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\n(window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.1.1');\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n//# sourceMappingURL=lit-html.js.map","/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { createMarker, directive, NodePart, removeNodes, reparentNodes } from '../lit-html.js';\n// Helper functions for manipulating parts\n// TODO(kschaaf): Refactor into Part API?\nconst createAndInsertPart = (containerPart, beforePart) => {\n    const container = containerPart.startNode.parentNode;\n    const beforeNode = beforePart === undefined ? containerPart.endNode :\n        beforePart.startNode;\n    const startNode = container.insertBefore(createMarker(), beforeNode);\n    container.insertBefore(createMarker(), beforeNode);\n    const newPart = new NodePart(containerPart.options);\n    newPart.insertAfterNode(startNode);\n    return newPart;\n};\nconst updatePart = (part, value) => {\n    part.setValue(value);\n    part.commit();\n    return part;\n};\nconst insertPartBefore = (containerPart, part, ref) => {\n    const container = containerPart.startNode.parentNode;\n    const beforeNode = ref ? ref.startNode : containerPart.endNode;\n    const endNode = part.endNode.nextSibling;\n    if (endNode !== beforeNode) {\n        reparentNodes(container, part.startNode, endNode, beforeNode);\n    }\n};\nconst removePart = (part) => {\n    removeNodes(part.startNode.parentNode, part.startNode, part.endNode.nextSibling);\n};\n// Helper for generating a map of array item to its index over a subset\n// of an array (used to lazily generate `newKeyToIndexMap` and\n// `oldKeyToIndexMap`)\nconst generateMap = (list, start, end) => {\n    const map = new Map();\n    for (let i = start; i <= end; i++) {\n        map.set(list[i], i);\n    }\n    return map;\n};\n// Stores previous ordered list of parts and map of key to index\nconst partListCache = new WeakMap();\nconst keyListCache = new WeakMap();\n/**\n * A directive that repeats a series of values (usually `TemplateResults`)\n * generated from an iterable, and updates those items efficiently when the\n * iterable changes based on user-provided `keys` associated with each item.\n *\n * Note that if a `keyFn` is provided, strict key-to-DOM mapping is maintained,\n * meaning previous DOM for a given key is moved into the new position if\n * needed, and DOM will never be reused with values for different keys (new DOM\n * will always be created for new keys). This is generally the most efficient\n * way to use `repeat` since it performs minimum unnecessary work for insertions\n * amd removals.\n *\n * IMPORTANT: If providing a `keyFn`, keys *must* be unique for all items in a\n * given call to `repeat`. The behavior when two or more items have the same key\n * is undefined.\n *\n * If no `keyFn` is provided, this directive will perform similar to mapping\n * items to values, and DOM will be reused against potentially different items.\n */\nexport const repeat = directive((items, keyFnOrTemplate, template) => {\n    let keyFn;\n    if (template === undefined) {\n        template = keyFnOrTemplate;\n    }\n    else if (keyFnOrTemplate !== undefined) {\n        keyFn = keyFnOrTemplate;\n    }\n    return (containerPart) => {\n        if (!(containerPart instanceof NodePart)) {\n            throw new Error('repeat can only be used in text bindings');\n        }\n        // Old part & key lists are retrieved from the last update\n        // (associated with the part for this instance of the directive)\n        const oldParts = partListCache.get(containerPart) || [];\n        const oldKeys = keyListCache.get(containerPart) || [];\n        // New part list will be built up as we go (either reused from\n        // old parts or created for new keys in this update). This is\n        // saved in the above cache at the end of the update.\n        const newParts = [];\n        // New value list is eagerly generated from items along with a\n        // parallel array indicating its key.\n        const newValues = [];\n        const newKeys = [];\n        let index = 0;\n        for (const item of items) {\n            newKeys[index] = keyFn ? keyFn(item, index) : index;\n            newValues[index] = template(item, index);\n            index++;\n        }\n        // Maps from key to index for current and previous update; these\n        // are generated lazily only when needed as a performance\n        // optimization, since they are only required for multiple\n        // non-contiguous changes in the list, which are less common.\n        let newKeyToIndexMap;\n        let oldKeyToIndexMap;\n        // Head and tail pointers to old parts and new values\n        let oldHead = 0;\n        let oldTail = oldParts.length - 1;\n        let newHead = 0;\n        let newTail = newValues.length - 1;\n        // Overview of O(n) reconciliation algorithm (general approach\n        // based on ideas found in ivi, vue, snabbdom, etc.):\n        //\n        // * We start with the list of old parts and new values (and\n        //   arrays of their respective keys), head/tail pointers into\n        //   each, and we build up the new list of parts by updating\n        //   (and when needed, moving) old parts or creating new ones.\n        //   The initial scenario might look like this (for brevity of\n        //   the diagrams, the numbers in the array reflect keys\n        //   associated with the old parts or new values, although keys\n        //   and parts/values are actually stored in parallel arrays\n        //   indexed using the same head/tail pointers):\n        //\n        //      oldHead v                 v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [ ,  ,  ,  ,  ,  ,  ]\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6] <- reflects the user's new\n        //                                      item order\n        //      newHead ^                 ^ newTail\n        //\n        // * Iterate old & new lists from both sides, updating,\n        //   swapping, or removing parts at the head/tail locations\n        //   until neither head nor tail can move.\n        //\n        // * Example below: keys at head pointers match, so update old\n        //   part 0 in-place (no need to move it) and record part 0 in\n        //   the `newParts` list. The last thing we do is advance the\n        //   `oldHead` and `newHead` pointers (will be reflected in the\n        //   next diagram).\n        //\n        //      oldHead v                 v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [0,  ,  ,  ,  ,  ,  ] <- heads matched: update 0\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n        //                                      & newHead\n        //      newHead ^                 ^ newTail\n        //\n        // * Example below: head pointers don't match, but tail\n        //   pointers do, so update part 6 in place (no need to move\n        //   it), and record part 6 in the `newParts` list. Last,\n        //   advance the `oldTail` and `oldHead` pointers.\n        //\n        //         oldHead v              v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [0,  ,  ,  ,  ,  , 6] <- tails matched: update 6\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldTail\n        //                                      & newTail\n        //         newHead ^              ^ newTail\n        //\n        // * If neither head nor tail match; next check if one of the\n        //   old head/tail items was removed. We first need to generate\n        //   the reverse map of new keys to index (`newKeyToIndexMap`),\n        //   which is done once lazily as a performance optimization,\n        //   since we only hit this case if multiple non-contiguous\n        //   changes were made. Note that for contiguous removal\n        //   anywhere in the list, the head and tails would advance\n        //   from either end and pass each other before we get to this\n        //   case and removals would be handled in the final while loop\n        //   without needing to generate the map.\n        //\n        // * Example below: The key at `oldTail` was removed (no longer\n        //   in the `newKeyToIndexMap`), so remove that part from the\n        //   DOM and advance just the `oldTail` pointer.\n        //\n        //         oldHead v           v oldTail\n        //   oldKeys:  [0, 1, 2, 3, 4, 5, 6]\n        //   newParts: [0,  ,  ,  ,  ,  , 6] <- 5 not in new map: remove\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    5 and advance oldTail\n        //         newHead ^           ^ newTail\n        //\n        // * Once head and tail cannot move, any mismatches are due to\n        //   either new or moved items; if a new key is in the previous\n        //   \"old key to old index\" map, move the old part to the new\n        //   location, otherwise create and insert a new part. Note\n        //   that when moving an old part we null its position in the\n        //   oldParts array if it lies between the head and tail so we\n        //   know to skip it when the pointers get there.\n        //\n        // * Example below: neither head nor tail match, and neither\n        //   were removed; so find the `newHead` key in the\n        //   `oldKeyToIndexMap`, and move that old part's DOM into the\n        //   next head position (before `oldParts[oldHead]`). Last,\n        //   null the part in the `oldPart` array since it was\n        //   somewhere in the remaining oldParts still to be scanned\n        //   (between the head and tail pointers) so that we know to\n        //   skip that old part on future iterations.\n        //\n        //         oldHead v        v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2,  ,  ,  ,  , 6] <- stuck: update & move 2\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    into place and advance\n        //                                      newHead\n        //         newHead ^           ^ newTail\n        //\n        // * Note that for moves/insertions like the one above, a part\n        //   inserted at the head pointer is inserted before the\n        //   current `oldParts[oldHead]`, and a part inserted at the\n        //   tail pointer is inserted before `newParts[newTail+1]`. The\n        //   seeming asymmetry lies in the fact that new parts are\n        //   moved into place outside in, so to the right of the head\n        //   pointer are old parts, and to the right of the tail\n        //   pointer are new parts.\n        //\n        // * We always restart back from the top of the algorithm,\n        //   allowing matching and simple updates in place to\n        //   continue...\n        //\n        // * Example below: the head pointers once again match, so\n        //   simply update part 1 and record it in the `newParts`\n        //   array.  Last, advance both head pointers.\n        //\n        //         oldHead v        v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1,  ,  ,  , 6] <- heads matched: update 1\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance both oldHead\n        //                                      & newHead\n        //            newHead ^        ^ newTail\n        //\n        // * As mentioned above, items that were moved as a result of\n        //   being stuck (the final else clause in the code below) are\n        //   marked with null, so we always advance old pointers over\n        //   these so we're comparing the next actual old value on\n        //   either end.\n        //\n        // * Example below: `oldHead` is null (already placed in\n        //   newParts), so advance `oldHead`.\n        //\n        //            oldHead v     v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6] <- old head already used:\n        //   newParts: [0, 2, 1,  ,  ,  , 6]    advance oldHead\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n        //               newHead ^     ^ newTail\n        //\n        // * Note it's not critical to mark old parts as null when they\n        //   are moved from head to tail or tail to head, since they\n        //   will be outside the pointer range and never visited again.\n        //\n        // * Example below: Here the old tail key matches the new head\n        //   key, so the part at the `oldTail` position and move its\n        //   DOM to the new head position (before `oldParts[oldHead]`).\n        //   Last, advance `oldTail` and `newHead` pointers.\n        //\n        //               oldHead v  v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1, 4,  ,  , 6] <- old tail matches new\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]   head: update & move 4,\n        //                                     advance oldTail & newHead\n        //               newHead ^     ^ newTail\n        //\n        // * Example below: Old and new head keys match, so update the\n        //   old head part in place, and advance the `oldHead` and\n        //   `newHead` pointers.\n        //\n        //               oldHead v oldTail\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1, 4, 3,   ,6] <- heads match: update 3\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]    and advance oldHead &\n        //                                      newHead\n        //                  newHead ^  ^ newTail\n        //\n        // * Once the new or old pointers move past each other then all\n        //   we have left is additions (if old list exhausted) or\n        //   removals (if new list exhausted). Those are handled in the\n        //   final while loops at the end.\n        //\n        // * Example below: `oldHead` exceeded `oldTail`, so we're done\n        //   with the main loop.  Create the remaining part and insert\n        //   it at the new head position, and the update is complete.\n        //\n        //                   (oldHead > oldTail)\n        //   oldKeys:  [0, 1, -, 3, 4, 5, 6]\n        //   newParts: [0, 2, 1, 4, 3, 7 ,6] <- create and insert 7\n        //   newKeys:  [0, 2, 1, 4, 3, 7, 6]\n        //                     newHead ^ newTail\n        //\n        // * Note that the order of the if/else clauses is not\n        //   important to the algorithm, as long as the null checks\n        //   come first (to ensure we're always working on valid old\n        //   parts) and that the final else clause comes last (since\n        //   that's where the expensive moves occur). The order of\n        //   remaining clauses is is just a simple guess at which cases\n        //   will be most common.\n        //\n        // * TODO(kschaaf) Note, we could calculate the longest\n        //   increasing subsequence (LIS) of old items in new position,\n        //   and only move those not in the LIS set. However that costs\n        //   O(nlogn) time and adds a bit more code, and only helps\n        //   make rare types of mutations require fewer moves. The\n        //   above handles removes, adds, reversal, swaps, and single\n        //   moves of contiguous items in linear time, in the minimum\n        //   number of moves. As the number of multiple moves where LIS\n        //   might help approaches a random shuffle, the LIS\n        //   optimization becomes less helpful, so it seems not worth\n        //   the code at this point. Could reconsider if a compelling\n        //   case arises.\n        while (oldHead <= oldTail && newHead <= newTail) {\n            if (oldParts[oldHead] === null) {\n                // `null` means old part at head has already been used\n                // below; skip\n                oldHead++;\n            }\n            else if (oldParts[oldTail] === null) {\n                // `null` means old part at tail has already been used\n                // below; skip\n                oldTail--;\n            }\n            else if (oldKeys[oldHead] === newKeys[newHead]) {\n                // Old head matches new head; update in place\n                newParts[newHead] =\n                    updatePart(oldParts[oldHead], newValues[newHead]);\n                oldHead++;\n                newHead++;\n            }\n            else if (oldKeys[oldTail] === newKeys[newTail]) {\n                // Old tail matches new tail; update in place\n                newParts[newTail] =\n                    updatePart(oldParts[oldTail], newValues[newTail]);\n                oldTail--;\n                newTail--;\n            }\n            else if (oldKeys[oldHead] === newKeys[newTail]) {\n                // Old head matches new tail; update and move to new tail\n                newParts[newTail] =\n                    updatePart(oldParts[oldHead], newValues[newTail]);\n                insertPartBefore(containerPart, oldParts[oldHead], newParts[newTail + 1]);\n                oldHead++;\n                newTail--;\n            }\n            else if (oldKeys[oldTail] === newKeys[newHead]) {\n                // Old tail matches new head; update and move to new head\n                newParts[newHead] =\n                    updatePart(oldParts[oldTail], newValues[newHead]);\n                insertPartBefore(containerPart, oldParts[oldTail], oldParts[oldHead]);\n                oldTail--;\n                newHead++;\n            }\n            else {\n                if (newKeyToIndexMap === undefined) {\n                    // Lazily generate key-to-index maps, used for removals &\n                    // moves below\n                    newKeyToIndexMap = generateMap(newKeys, newHead, newTail);\n                    oldKeyToIndexMap = generateMap(oldKeys, oldHead, oldTail);\n                }\n                if (!newKeyToIndexMap.has(oldKeys[oldHead])) {\n                    // Old head is no longer in new list; remove\n                    removePart(oldParts[oldHead]);\n                    oldHead++;\n                }\n                else if (!newKeyToIndexMap.has(oldKeys[oldTail])) {\n                    // Old tail is no longer in new list; remove\n                    removePart(oldParts[oldTail]);\n                    oldTail--;\n                }\n                else {\n                    // Any mismatches at this point are due to additions or\n                    // moves; see if we have an old part we can reuse and move\n                    // into place\n                    const oldIndex = oldKeyToIndexMap.get(newKeys[newHead]);\n                    const oldPart = oldIndex !== undefined ? oldParts[oldIndex] : null;\n                    if (oldPart === null) {\n                        // No old part for this value; create a new one and\n                        // insert it\n                        const newPart = createAndInsertPart(containerPart, oldParts[oldHead]);\n                        updatePart(newPart, newValues[newHead]);\n                        newParts[newHead] = newPart;\n                    }\n                    else {\n                        // Reuse old part\n                        newParts[newHead] =\n                            updatePart(oldPart, newValues[newHead]);\n                        insertPartBefore(containerPart, oldPart, oldParts[oldHead]);\n                        // This marks the old part as having been used, so that\n                        // it will be skipped in the first two checks above\n                        oldParts[oldIndex] = null;\n                    }\n                    newHead++;\n                }\n            }\n        }\n        // Add parts for any remaining new values\n        while (newHead <= newTail) {\n            // For all remaining additions, we insert before last new\n            // tail, since old pointers are no longer valid\n            const newPart = createAndInsertPart(containerPart, newParts[newTail + 1]);\n            updatePart(newPart, newValues[newHead]);\n            newParts[newHead++] = newPart;\n        }\n        // Remove any remaining unused old parts\n        while (oldHead <= oldTail) {\n            const oldPart = oldParts[oldHead++];\n            if (oldPart !== null) {\n                removePart(oldPart);\n            }\n        }\n        // Save order of new parts for next round\n        partListCache.set(containerPart, newParts);\n        keyListCache.set(containerPart, newKeys);\n    };\n});\n//# sourceMappingURL=repeat.js.map","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\nimport { AttributePart, directive } from '../lit-html.js';\n/**\n * For AttributeParts, sets the attribute if the value is defined and removes\n * the attribute if the value is undefined.\n *\n * For other part types, this directive is a no-op.\n */\nexport const ifDefined = directive((value) => (part) => {\n    if (value === undefined && part instanceof AttributePart) {\n        if (value !== part.value) {\n            const name = part.committer.name;\n            part.committer.element.removeAttribute(name);\n        }\n    }\n    else {\n        part.setValue(value);\n    }\n});\n//# sourceMappingURL=if-defined.js.map","import * as lit from 'lit-html';\nimport { TemplateResult } from 'lit-html';\nimport { connect, disconnect, HANDLES_KEY } from './store';\nimport { Pool, addMicrotask } from './utils';\nimport { repeat as litRepeat } from 'lit-html/directives/repeat';\nimport { ifDefined as litIfDefined } from 'lit-html/directives/if-defined';\nlet litHtml = {\n    html: lit.html,\n    svg: lit.svg,\n    render: lit.render,\n    directive: lit.directive,\n    repeat: litRepeat,\n    ifDefined: litIfDefined,\n};\nif (window.__litHtml) {\n    // 自定义元素不能重复定义\n    // 所以嵌套 gem app 中导出的自定义元素类可能是之前定义的类\n    // 可能造成使用的 html 对象不是同一个\n    // map, 缓存之类的会变得不同\n    // 所以需要把他们放在全局对象中\n    litHtml = window.__litHtml;\n}\nelse {\n    window.__litHtml = litHtml;\n}\nconst { html, svg, render, directive, repeat, ifDefined } = litHtml;\nexport { html, svg, render, directive, repeat, ifDefined, TemplateResult };\nconst idElementMap = new Map();\n// id 必须全局唯一才能正确跳转\n// 只能检查自定义元素的 ID\nconst checkHash = () => {\n    const hash = window.location.hash.substr(1);\n    if (hash) {\n        const element = idElementMap.get(hash);\n        if (element) {\n            element.scrollIntoView();\n        }\n    }\n};\nwindow.addEventListener('hashchange', checkHash);\nif (document.readyState === 'complete') {\n    checkHash();\n}\nelse {\n    window.addEventListener('load', checkHash);\n}\n// global render task pool\nconst renderTaskPool = new Pool();\nconst exec = () => window.requestAnimationFrame(function callback(timestamp) {\n    const task = renderTaskPool.get();\n    if (task) {\n        task();\n        if (performance.now() - timestamp < 16) {\n            callback(timestamp);\n            return;\n        }\n    }\n    exec();\n});\nexec();\nexport const updaterWithSetStateSet = new Set();\n// final 字段如果使用 symbol 或者 private 将导致 modal-base 生成匿名子类 declaration 失败\nexport class BaseElement extends HTMLElement {\n    constructor(shadow = true) {\n        super();\n        this.setState = this.setState.bind(this);\n        this.willMount = this.willMount.bind(this);\n        this.render = this.render.bind(this);\n        this.mounted = this.mounted.bind(this);\n        this.shouldUpdate = this.shouldUpdate.bind(this);\n        this.update = this.update.bind(this);\n        this.updated = this.updated.bind(this);\n        this.disconnectStores = this.disconnectStores.bind(this);\n        this.attributeChanged = this.attributeChanged.bind(this);\n        this.propertyChanged = this.propertyChanged.bind(this);\n        this.unmounted = this.unmounted.bind(this);\n        this._renderRoot = shadow ? this.attachShadow({ mode: 'open' }) : this;\n        const { observedAttributes, observedPropertys, observedStores, adoptedStyleSheets } = new.target;\n        if (observedAttributes) {\n            observedAttributes.forEach(attr => {\n                Object.defineProperty(this, attr, {\n                    get: () => {\n                        return this.getAttribute(attr) || '';\n                    },\n                    set: (v) => {\n                        if (v === null) {\n                            this.removeAttribute(attr);\n                        }\n                        else {\n                            this.setAttribute(attr, v);\n                        }\n                    },\n                });\n            });\n        }\n        if (observedAttributes && !observedAttributes.includes('id')) {\n            // ID 更改是触发 update，更新 `idElementMap`\n            observedAttributes.push('id');\n        }\n        if (observedPropertys) {\n            observedPropertys.forEach(prop => {\n                let propValue;\n                Object.defineProperty(this, prop, {\n                    get: () => {\n                        return propValue;\n                    },\n                    set: v => {\n                        if (v !== propValue) {\n                            propValue = v;\n                            if (this._isMounted) {\n                                this.propertyChanged(prop, propValue, v);\n                                addMicrotask(this.update);\n                            }\n                        }\n                    },\n                });\n            });\n        }\n        if (observedStores) {\n            observedStores.forEach(store => {\n                if (!store[HANDLES_KEY]) {\n                    throw new Error('`observedStores` only support store module');\n                }\n                connect(store, this.update);\n            });\n        }\n        if (adoptedStyleSheets) {\n            (this.shadowRoot || document).adoptedStyleSheets = adoptedStyleSheets;\n        }\n    }\n    /**@final */\n    setState(payload) {\n        Object.assign(this.state, payload);\n        addMicrotask(this.update);\n    }\n    willMount() { }\n    render() {\n        return html `\n      <slot></slot>\n    `;\n    }\n    mounted() { }\n    shouldUpdate() {\n        return true;\n    }\n    /**@final */\n    update() {\n        if (this._isMounted && this.shouldUpdate()) {\n            render(this.render(), this._renderRoot);\n            this.updated();\n            idElementMap.set(this.id, this);\n        }\n    }\n    updated() { }\n    /**@final */\n    disconnectStores(storeList) {\n        storeList.forEach(store => {\n            disconnect(store, this.update);\n        });\n    }\n    // 同步触发\n    propertyChanged(_name, _oldValue, _newValue) { }\n    // 异步触发\n    attributeChanged(_name, _oldValue, _newValue) { }\n    unmounted() { }\n    /**@private */\n    /**@final */\n    attributeChangedCallback(name, oldValue, newValue) {\n        if (this._isMounted) {\n            this.attributeChanged(name, oldValue, newValue);\n            addMicrotask(this.update);\n        }\n    }\n    /**@private */\n    /**@final */\n    // adoptedCallback() {}\n    /**@private */\n    /**@final */\n    disconnectedCallback() {\n        const constructor = this.constructor;\n        if (constructor.observedStores) {\n            constructor.observedStores.forEach(store => {\n                disconnect(store, this.update);\n            });\n        }\n        this.unmounted();\n        this._isMounted = false;\n    }\n}\nBaseElement.observedAttributes = ['id']; // WebAPI 中是实时检查这个列表\nexport class GemElement extends BaseElement {\n    /**@private */\n    /**@final */\n    connectedCallback() {\n        this.willMount();\n        render(this.render(), this._renderRoot);\n        this.mounted();\n        idElementMap.set(this.id, this);\n        this._isMounted = true;\n    }\n}\nexport class AsyncGemElement extends BaseElement {\n    /**@final */\n    update() {\n        renderTaskPool.add(() => {\n            if (this.shouldUpdate()) {\n                render(this.render(), this._renderRoot);\n                this.updated();\n                idElementMap.set(this.id, this);\n            }\n        });\n    }\n    /**@private */\n    /**@final */\n    connectedCallback() {\n        this.willMount();\n        renderTaskPool.add(() => {\n            render(this.render(), this._renderRoot);\n            this.mounted();\n            idElementMap.set(this.id, this);\n            this._isMounted = true;\n        });\n    }\n}\n// 重写了全局 customElements\n// 原因是方便多个独立 app 同时使用 gem\n// 用户使用和 gem 同名的元素不会生效也不会报错\nconst define = customElements.define.bind(customElements);\ncustomElements.define = function (tagName, Class, options) {\n    if (!customElements.get(tagName)) {\n        define(tagName, Class, options);\n    }\n};\n//# sourceMappingURL=element.js.map","import { html, GemElement } from '@mantou/gem';\n\ninterface HTMLAudioElementExt extends HTMLAudioElement {\n  captureStream: () => MediaStream;\n  mozCaptureStream: () => MediaStream;\n}\n\ninterface HTMLCanvasElementExt extends HTMLCanvasElement {\n  captureStream: (rate?: number) => MediaStream;\n}\n\nclass App extends GemElement {\n  shadowRoot: ShadowRoot;\n  mr: MediaRecorder;\n  get audio() {\n    return this.shadowRoot.querySelector('audio') as HTMLAudioElementExt;\n  }\n  get canvas() {\n    return this.shadowRoot.querySelector('canvas') as HTMLCanvasElementExt;\n  }\n  get video() {\n    return this.shadowRoot.querySelector('video') as HTMLVideoElement;\n  }\n  mounted() {\n    const ctx = this.canvas.getContext('2d') as CanvasRenderingContext2D;\n    const render = () => {\n      ctx.rect(10, 10, 150, 100);\n      ctx.fill();\n      window.requestAnimationFrame(render);\n    };\n    window.requestAnimationFrame(render);\n  }\n  onClick = async () => {\n    this.audio.captureStream = this.audio.captureStream || this.audio.mozCaptureStream;\n    const ams = this.audio.captureStream().getAudioTracks()[0];\n    const ims = this.canvas.captureStream(25).getVideoTracks()[0];\n    console.log({ ams, ims });\n    this.audio.currentTime = 0;\n    await this.audio.play();\n    const vms = new MediaStream([ims, ams]);\n    console.log({ vms });\n    this.video.onerror = console.error;\n    this.video.srcObject = vms;\n    this.video.play();\n    this.mr = new MediaRecorder(vms);\n    this.mr.ondataavailable = console.log;\n    this.mr.onerror = console.error;\n    this.mr.onstart = console.log;\n    this.mr.onstop = console.log;\n    this.mr.start();\n  };\n  onStop = () => {\n    this.audio.pause();\n    this.video.pause();\n    this.mr.stop();\n  };\n  render() {\n    return html`\n      <canvas></canvas>\n      <audio\n        muted\n        crossorigin=\"anonymous\"\n        src=\"https://raw.githubusercontent.com/mantou132/javascript-learn/master/media-session/take-me-hand.mp3\"\n      ></audio>\n      <button @click=${this.onClick}>play</button>\n      <button @click=${this.onStop}>stop</button>\n      <video controls muted></video>\n    `;\n  }\n}\n\ncustomElements.define('app-root', App);\n","import { render, html } from '@mantou/gem';\nimport './';\n\nrender(\n  html`\n    <style>\n      html,\n      body {\n        height: 100%;\n      }\n      body {\n        margin: 0;\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell',\n          'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n      }\n      app-root {\n        width: 50%;\n      }\n    </style>\n    <app-root></app-root>\n  `,\n  document.body,\n);\n"],"sourceRoot":""}